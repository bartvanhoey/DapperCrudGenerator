-- /Pages/@@ClassNameDelete.razor
@using @@NameSpace.Data
@page "/@@ObjectNamedelete/{@@PrimaryKey:int}"
@inject I@@ClassNameService @@ClassService
@inject NavigationManager NavigationManager


<h1 style="text-align:center">Delete a @@ClassName</h1>
<p style="color:red;text-align:center">Are you sure you want to permanently delete this @@ObjectName? There is no undo!</p>

<table class="genform">
	@@ConfirmDeleteRows
    <tr>
        <td colspan="2" style="text-align:center">
            <button class="btn btn-primary" @onclick="@Delete">Delete</button>
            <button class="btn btn-secondary" @onclick="@Cancel">Cancel</button>
        </td>
    </tr>
</table>

@code {
    // Create a new, empty @@ClassName object
    @@ClassName @@ObjectName = new @@ClassName();

    [Parameter]
    public int @@PrimaryKey { get; set; }

    //Executes on page open..
    protected override async Task OnInitializedAsync()
    {
        @@ObjectName = await @@ClassNameService.@@ClassName_GetOne(@@PrimaryKey);
    }
    //Executes if user confirms the deletion.
    protected async Task Delete()
    {
        // Delete the row and go back to the list. 
        // In the SProcedure you can set IsActive to 0 rather than physically delete.
        await @@ClassNameService.@@ClassNameDelete(@@PrimaryKey);
        NavigationManager.NavigateTo("/@@ListPageName");
    }
    // Executes when user clicks the Cancel button.
    void Cancel()
    {
        NavigationManager.NavigateTo("/@@ListPageName");
    }
}